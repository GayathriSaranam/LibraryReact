// <auto-generated />
using System;
using LibraryReact.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryReact.Migrations
{
    [DbContext(typeof(ElibraryDbContext))]
    partial class ElibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LibraryReact.Models.Admins", b =>
                {
                    b.Property<string>("AdminID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminFullName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("LibraryReact.Models.Authors", b =>
                {
                    b.Property<string>("AuthorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorID");

                    b.ToTable("authors");
                });

            modelBuilder.Entity("LibraryReact.Models.Books", b =>
                {
                    b.Property<string>("BookID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BooKLanguage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookCost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookID");

                    b.ToTable("books");
                });

            modelBuilder.Entity("LibraryReact.Models.IssueBooks", b =>
                {
                    b.Property<int>("IssueBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("BookDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BookIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IssueBookId");

                    b.ToTable("issueBooks");
                });

            modelBuilder.Entity("LibraryReact.Models.Members", b =>
                {
                    b.Property<string>("MemberID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MemberContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MemberDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberFullAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberID");

                    b.ToTable("members");
                });

            modelBuilder.Entity("LibraryReact.Models.Publishers", b =>
                {
                    b.Property<string>("PublisherID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherID");

                    b.ToTable("publishers");
                });
#pragma warning restore 612, 618
        }
    }
}
